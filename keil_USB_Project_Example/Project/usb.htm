<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\usb.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\usb.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Sat Nov 04 15:06:08 2017
<BR><P>
<H3>Maximum Stack Usage =        164 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USB_LP_CAN1_RX0_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2b]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2b]">ADC1_2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[48]">ADC3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[53]">ADC4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[13]">BusFault_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2e]">CAN1_RX1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2f]">CAN1_SCE_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[54]">COMP1_2_3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[55]">COMP4_5_6_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[56]">COMP7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[24]">DMA1_Channel1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[25]">DMA1_Channel2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[26]">DMA1_Channel3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[27]">DMA1_Channel4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[28]">DMA1_Channel5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[29]">DMA1_Channel6_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2a]">DMA1_Channel7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4e]">DMA2_Channel1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4f]">DMA2_Channel2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[50]">DMA2_Channel3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[51]">DMA2_Channel4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[52]">DMA2_Channel5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[16]">DebugMon_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[0]">EP1_IN_Callback</a> from usb_endp.o(.text) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[2]">EP3_OUT_Callback</a> from usb_endp.o(.text) referenced 2 times from usb_istr.o(.data)
 <LI><a href="#[1f]">EXTI0_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[41]">EXTI15_10_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[20]">EXTI1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[21]">EXTI2_TS_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[22]">EXTI3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[23]">EXTI4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[30]">EXTI9_5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1d]">FLASH_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[5a]">FPU_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[11]">HardFault_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[39]">I2C1_ER_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[38]">I2C1_EV_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3b]">I2C2_ER_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3a]">I2C2_EV_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[12]">MemManage_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[10]">NMI_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1]">NOP_Process</a> from usb_core.o(.text) referenced 38 times from usb_istr.o(.data)
 <LI><a href="#[1a]">PVD_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[17]">PendSV_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1e]">RCC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[42]">RTC_Alarm_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1c]">RTC_WKUP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[f]">Reset_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3c]">SPI1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[49]">SPI3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[15]">SVC_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[b1]">Standard_GetConfiguration</a> from usb_core.o(.text) referenced from usb_core.o(.text)
 <LI><a href="#[b2]">Standard_GetInterface</a> from usb_core.o(.text) referenced from usb_core.o(.text)
 <LI><a href="#[b0]">Standard_GetStatus</a> from usb_core.o(.text) referenced 3 times from usb_core.o(.text)
 <LI><a href="#[18]">SysTick_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[5c]">SystemInit</a> from system_stm32f30x.o(.text) referenced from startup_stm32f30x.o(.text)
 <LI><a href="#[1b]">TAMPER_STAMP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[31]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[34]">TIM1_CC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[33]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[32]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[35]">TIM2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[36]">TIM3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[37]">TIM4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4c]">TIM6_DAC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4d]">TIM7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[44]">TIM8_BRK_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[47]">TIM8_CC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[46]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[45]">TIM8_UP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4a]">UART4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4b]">UART5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3e]">USART1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3f]">USART2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[40]">USART3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[43]">USBWakeUp_IRQHandler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[59]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2c]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[57]">USB_HP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2d]">USB_LP_CAN1_RX0_IRQHandler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[58]">USB_LP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[14]">UsageFault_Handler</a> from stm32_it.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[7]">Virtual_Com_Port_Data_Setup</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[b]">Virtual_Com_Port_GetConfigDescriptor</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[a]">Virtual_Com_Port_GetDeviceDescriptor</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[9b]">Virtual_Com_Port_GetLineCoding</a> from usb_prop.o(.text) referenced from usb_prop.o(.text)
 <LI><a href="#[c]">Virtual_Com_Port_GetStringDescriptor</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[9]">Virtual_Com_Port_Get_Interface_Setting</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[8]">Virtual_Com_Port_NoData_Setup</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[4]">Virtual_Com_Port_Reset</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[d]">Virtual_Com_Port_SetConfiguration</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[e]">Virtual_Com_Port_SetDeviceAddress</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[9c]">Virtual_Com_Port_SetLineCoding</a> from usb_prop.o(.text) referenced from usb_prop.o(.text)
 <LI><a href="#[5]">Virtual_Com_Port_Status_In</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[6]">Virtual_Com_Port_Status_Out</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[3]">Virtual_Com_Port_init</a> from usb_prop.o(.text) referenced 2 times from usb_prop.o(.data)
 <LI><a href="#[19]">WWDG_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[5d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f30x.o(.text)
 <LI><a href="#[5b]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[bc]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[be]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[bf]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[c0]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c1]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c2]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[f]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>COMP4_5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>COMP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI2_TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SystemInit</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, system_stm32f30x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Leave_LowPowerMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, system_stm32f30x.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>EXTI_DeInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, stm32f30x_exti.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>EXTI_Init</STRONG> (Thumb, 354 bytes, Stack size 8 bytes, stm32f30x_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[c5]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_exti.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f30x_exti.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f30x_exti.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>EXTI_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_exti.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>EXTI_GetITStatus</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f30x_exti.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBWakeUp_IRQHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[61]"></a>GPIO_DeInit</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, stm32f30x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphResetCmd
</UL>

<P><STRONG><a name="[6d]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f30x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[ca]"></a>GPIO_StructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>GPIO_ReadInputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetLeds
</UL>

<P><STRONG><a name="[d1]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f30x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[76]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f30x_misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[77]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32f30x_misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[d3]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_misc.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f30x_misc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f30x_misc.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>RCC_DeInit</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>RCC_HSEConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32f30x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[63]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f30x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[d8]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>RCC_LSEConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>RCC_LSEDriveConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>RCC_PLLConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>RCC_PREDIV1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 1116 bytes, Stack size 24 bytes, stm32f30x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[e7]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>RCC_I2CCLKConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>RCC_TIMCLKConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>RCC_USARTCLKConfig</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[eb]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>RCC_I2SCLKConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[6b]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[73]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[62]"></a>RCC_AHBPeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[66]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[67]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[ef]"></a>RCC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f30x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[68]"></a>USART_Init</STRONG> (Thumb, 220 bytes, Stack size 88 bytes, stm32f30x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[f3]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>USART_ClockInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>USART_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>USART_DirectionModeCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>USART_MSBFirstCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>USART_DataInvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>USART_InvPinCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>USART_SWAPPinCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>USART_ReceiverTimeOutCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>USART_SetReceiverTimeOut</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>USART_STOPModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>USART_StopModeWakeUpSourceConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>USART_AutoBaudRateCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>USART_AutoBaudRateConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVAL_COM1_IRQHandler
</UL>

<P><STRONG><a name="[106]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>USART_MuteModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>USART_MuteModeWakeUpConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>USART_AddressDetectionConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>USART_LINCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>USART_SmartCardCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>USART_SetAutoRetryCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[111]"></a>USART_SetBlockLength</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>USART_IrDAConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>USART_IrDACmd</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>USART_DECmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>USART_DEPolarityConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>USART_SetDEAssertionTime</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>USART_SetDEDeassertionTime</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>USART_DMAReceptionErrorConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>USART_ITConfig</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>USART_RequestCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>USART_OverrunDetectionConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>USART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVAL_COM1_IRQHandler
</UL>

<P><STRONG><a name="[11d]"></a>USART_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>USART_GetITStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f30x_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVAL_COM1_IRQHandler
</UL>

<P><STRONG><a name="[11e]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f30x_usart.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>Set_System</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Set_System &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>Set_USBClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_USBClock
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_USBCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11f]"></a>Enter_LowPowerMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hw_config.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>Leave_LowPowerMode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Leave_LowPowerMode &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume_Init
</UL>

<P><STRONG><a name="[75]"></a>USB_Interrupts_Config</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_Interrupts_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>USB_Cable_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hw_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOff
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
</UL>

<P><STRONG><a name="[90]"></a>USART_Config_Default</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hw_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_init
</UL>

<P><STRONG><a name="[9a]"></a>USART_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hw_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Status_In
</UL>

<P><STRONG><a name="[120]"></a>USB_To_USART_Send_Data</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hw_config.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>Handle_USBAsynchXfer</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Handle_USBAsynchXfer &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxValid
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SOF_Callback
</UL>

<P><STRONG><a name="[85]"></a>USART_To_USB_Send_Data</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hw_config.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVAL_COM1_IRQHandler
</UL>

<P><STRONG><a name="[7b]"></a>Get_SerialNum</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_init
</UL>

<P><STRONG><a name="[7d]"></a>GPIO_ResetLeds</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, hw_config.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[81]"></a>delay</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>SysTickInit</STRONG> (Thumb, 90 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SysTickInit &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>main</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = main &rArr; SysTickInit &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[10]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = USB_LP_CAN1_RX0_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>EVAL_COM1_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32_it.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_To_USB_Send_Data
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>

<P><STRONG><a name="[43]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBWakeUp_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>EP1_IN_Callback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_endp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>EP3_OUT_Callback</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_endp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EP3_OUT_Callback &rArr; USB_SIL_Read &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxValid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[8a]"></a>SOF_Callback</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usb_endp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SOF_Callback &rArr; Handle_USBAsynchXfer &rArr; USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handle_USBAsynchXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[82]"></a>USB_Istr</STRONG> (Thumb, 426 bytes, Stack size 40 bytes, usb_istr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Suspend
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SOF_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[3]"></a>Virtual_Com_Port_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_prop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Virtual_Com_Port_init &rArr; Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config_Default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>Virtual_Com_Port_Reset</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, usb_prop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Virtual_Com_Port_Reset &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPType
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxAddr
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxAddr
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBTABLE
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Status_Out
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxValid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>Virtual_Com_Port_SetConfiguration</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb_prop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>Virtual_Com_Port_SetDeviceAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_prop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>Virtual_Com_Port_Status_In</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usb_prop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Virtual_Com_Port_Status_In
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>Virtual_Com_Port_Status_Out</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[9c]"></a>Virtual_Com_Port_SetLineCoding</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_prop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>Virtual_Com_Port_GetLineCoding</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_prop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.text)
</UL>
<P><STRONG><a name="[7]"></a>Virtual_Com_Port_Data_Setup</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, usb_prop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Virtual_Com_Port_Data_Setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>Virtual_Com_Port_NoData_Setup</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usb_prop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>Virtual_Com_Port_GetDeviceDescriptor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_prop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Virtual_Com_Port_GetDeviceDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>Virtual_Com_Port_GetConfigDescriptor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usb_prop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Virtual_Com_Port_GetConfigDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>Virtual_Com_Port_GetStringDescriptor</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usb_prop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Virtual_Com_Port_GetStringDescriptor &rArr; Standard_GetDescriptorData
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>Virtual_Com_Port_Get_Interface_Setting</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_prop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[8e]"></a>PowerOn</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usb_pwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PowerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Cable_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_init
</UL>

<P><STRONG><a name="[9f]"></a>PowerOff</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usb_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Cable_Config
</UL>

<P><STRONG><a name="[8d]"></a>Suspend</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, usb_pwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[a0]"></a>Resume_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_pwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Resume_Init &rArr; Leave_LowPowerMode &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Leave_LowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume
</UL>

<P><STRONG><a name="[8c]"></a>Resume</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, usb_pwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Resume &rArr; Resume_Init &rArr; Leave_LowPowerMode &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[b1]"></a>Standard_GetConfiguration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetConfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>Standard_SetConfiguration</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[b2]"></a>Standard_GetInterface</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>Standard_SetInterface</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[b0]"></a>Standard_GetStatus</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>Standard_ClearFeature</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[af]"></a>Standard_SetEndPointFeature</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Standard_SetEndPointFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[ad]"></a>Standard_SetDeviceFeature</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetDeviceFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[9d]"></a>Standard_GetDescriptorData</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetDescriptorData
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_GetStringDescriptor
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_GetConfigDescriptor
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_GetDeviceDescriptor
</UL>

<P><STRONG><a name="[b4]"></a>Post0_Process</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Post0_Process &rArr; SetEPRxCount
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[b5]"></a>Setup0_Process</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSwap
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[99]"></a>SetDeviceAddress</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[b7]"></a>In0_Process</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = In0_Process &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[b8]"></a>Out0_Process</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Out0_Process &rArr; DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[1]"></a>NOP_Process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> usb_prop.o(.data)
<LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>USB_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>CTR_LP</STRONG> (Thumb, 616 bytes, Stack size 8 bytes, usb_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[121]"></a>CTR_HP</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, usb_int.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>UserToPMABufferCopy</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, usb_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UserToPMABufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
</UL>

<P><STRONG><a name="[a6]"></a>PMAToUserBufferCopy</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, usb_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PMAToUserBufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[122]"></a>SetCNTR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>GetCNTR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>SetISTR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>GetISTR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>GetFNR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>SetDADDR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>GetDADDR</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>SetBTABLE</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[129]"></a>GetBTABLE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>SetENDPOINT</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>GetENDPOINT</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDouBleBuffEPStall
</UL>

<P><STRONG><a name="[92]"></a>SetEPType</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_regs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPType
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[12b]"></a>GetEPType</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>SetEPTxStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usb_regs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[98]"></a>SetEPRxStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, usb_regs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetEPRxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[b9]"></a>SetDouBleBuffEPStall</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, usb_regs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetENDPOINT
</UL>

<P><STRONG><a name="[12c]"></a>GetEPTxStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>GetEPRxStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>SetEPTxValid</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_regs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPTxValid
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handle_USBAsynchXfer
</UL>

<P><STRONG><a name="[89]"></a>SetEPRxValid</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_regs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxValid
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_OUT_Callback
</UL>

<P><STRONG><a name="[12e]"></a>SetEP_KIND</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>ClearEP_KIND</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>Clear_Status_Out</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[130]"></a>Set_Status_Out</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>SetEPDoubleBuff</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>ClearEPDoubleBuff</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>GetTxStallStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>GetRxStallStatus</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>ClearEP_CTR_RX</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>ClearEP_CTR_TX</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>ToggleDTOG_RX</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>ToggleDTOG_TX</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>ClearDTOG_RX</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[a2]"></a>ClearDTOG_TX</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[139]"></a>SetEPAddress</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>GetEPAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>SetEPTxAddr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_regs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[94]"></a>SetEPRxAddr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_regs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[a9]"></a>GetEPTxAddr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
</UL>

<P><STRONG><a name="[a5]"></a>GetEPRxAddr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[a7]"></a>SetEPTxCount</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Write
</UL>

<P><STRONG><a name="[13b]"></a>SetEPCountRxReg</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>SetEPRxCount</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, usb_regs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[13c]"></a>GetEPTxCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>GetEPRxCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[13d]"></a>SetEPDblBuffAddr</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>SetEPDblBuf0Addr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>SetEPDblBuf1Addr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>GetEPDblBuf0Addr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>GetEPDblBuf1Addr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[142]"></a>SetEPDblBuffCount</STRONG> (Thumb, 186 bytes, Stack size 12 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>SetEPDblBuf0Count</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>SetEPDblBuf1Count</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>GetEPDblBuf0Count</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>GetEPDblBuf1Count</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>GetEPDblBufDir</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>FreeUserBuffer</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>ToWord</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_regs.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>ByteSwap</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_regs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[8f]"></a>USB_SIL_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_sil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_init
</UL>

<P><STRONG><a name="[79]"></a>USB_SIL_Write</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usb_sil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_SIL_Write &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handle_USBAsynchXfer
</UL>

<P><STRONG><a name="[88]"></a>USB_SIL_Read</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usb_sil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_SIL_Read &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_OUT_Callback
</UL>

<P><STRONG><a name="[5f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[14a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[14e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[14f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[60]"></a>SetSysClock</STRONG> (Thumb, 188 bytes, Stack size 12 bytes, system_stm32f30x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7c]"></a>IntToUnicode</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, hw_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
</UL>

<P><STRONG><a name="[a4]"></a>DataStageOut</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
</UL>

<P><STRONG><a name="[a8]"></a>DataStageIn</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
</UL>

<P><STRONG><a name="[ab]"></a>NoData_Setup0</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = NoData_Setup0 &rArr; Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetDeviceFeature
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetEndPointFeature
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetInterface
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[b3]"></a>Data_Setup0</STRONG> (Thumb, 678 bytes, Stack size 40 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
